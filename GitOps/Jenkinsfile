@Library('Shared') _
pipeline {
    agent any
    
    parameters {
        string(name: 'FRONTEND_DOCKER_TAG', defaultValue: '', description: 'Frontend Docker tag of the image built by the CI job')
        string(name: 'BACKEND_DOCKER_TAG', defaultValue: '', description: 'Backend Docker tag of the image built by the CI job')
    }

    stages {
        stage("Workspace cleanup") {
            steps {
                script {
                    cleanWs()
                }
            }
        }

        stage('Git: Code Checkout') {
            steps {
                script {
                    code_checkout("https://github.com/07amansaini8684/jenkinsMega.git", "main")
                }
            }
        }

        stage('Verify: Docker Image Tags') {
            steps {
                script {
                    echo "FRONTEND_DOCKER_TAG: ${params.FRONTEND_DOCKER_TAG}"
                    echo "BACKEND_DOCKER_TAG: ${params.BACKEND_DOCKER_TAG}"
                }
            }
        }

        stage("Update: Kubernetes manifests") {
            steps {
                script {
                    dir('kubernetes') {
                        sh """
                            sed -i -e 's|wanderlust-backend-beta.*|wanderlust-backend-beta:${params.BACKEND_DOCKER_TAG}|g' backend.yaml
                            sed -i -e 's|wanderlust-frontend-beta.*|wanderlust-frontend-beta:${params.FRONTEND_DOCKER_TAG}|g' frontend.yaml
                        """
                    }
                }
            }
        }

        stage("Git: Code update and push to GitHub") {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'github-token',
                        usernameVariable: 'GIT_USER',
                        passwordVariable: 'GIT_TOKEN'
                    )]) {
                        sh '''
                            # Configure Git identity (required)
                            git config user.email "07amansaini.work@gmail.com"
                            git config user.name "Jenkins CI"
                            
                            # Verify changes
                            echo "=== Current changes ==="
                            git status
                            echo "=== Modified files diff ==="
                            git diff --staged || true
                            
                            # Commit changes
                            git add .
                            git commit -m "Updated manifests with tags: FE=${FRONTEND_DOCKER_TAG}, BE=${BACKEND_DOCKER_TAG}"
                            
                            # Push using token authentication
                            git push https://${GIT_USER}:${GIT_TOKEN}@github.com/07amansaini8684/jenkinsMega.git main
                            echo "=== Push successful ==="
                        '''
                    }
                }
            }
        }
    }

    post {
        success {
            script {
                emailext attachLog: true,
                subject: "SUCCESS: JenkinsMega Deployment ${currentBuild.number}",
                body: """
                    <p>Deployment completed successfully!</p>
                    <p><b>Frontend Tag:</b> ${params.FRONTEND_DOCKER_TAG}</p>
                    <p><b>Backend Tag:</b> ${params.BACKEND_DOCKER_TAG}</p>
                    <p>Build URL: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                """,
                to: 'mr.amannobody@gmail.com, 07amansaini.work@gmail.com'
            }
        }

        failure {
            script {
                emailext attachLog: true,
                subject: "FAILED: JenkinsMega Deployment ${currentBuild.number}",
                body: """
                    <p style="color:red;">Deployment failed!</p>
                    <p>Check logs: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                """,
                to: 'mr.amannobody@gmail.com, 07amansaini.work@gmail.com'
            }
        }
    }
}
